pseudo_bulk1 <- AverageExpression(object = dataset1,assays = "RNA",features = unique_genes,layer = "scale.data")
pseudo_bulk1 <- as.data.frame(pseudo_bulk1[["RNA"]])
colnames(pseudo_bulk1) <- unique(dataset1@meta.data$final_label)
# Compute pseudo bulk average expression on z-score scaled data
DefaultAssay(dataset2) <- "RNA"
Idents(dataset2) <- "cellType_L3"
dataset2 <- ScaleData(object = dataset2, features = unique_genes)
pseudo_bulk2 <- AverageExpression(object = dataset2,assays = "RNA",features = unique_genes,layer = "scale.data")
pseudo_bulk2 <- as.data.frame(pseudo_bulk2[["RNA"]])
colnames(pseudo_bulk2) <- unique(dataset2@meta.data$final_label)
# Compute pseudo bulk average expression on z-score scaled data
DefaultAssay(dataset3) <- "RNA"
Idents(dataset3) <- "cellType_L3"
dataset3 <- ScaleData(object = dataset3, features = unique_genes )
pseudo_bulk3 <- AverageExpression(object = dataset3,assays = "RNA",features = unique_genes,layer = "scale.data")
pseudo_bulk3 <- as.data.frame(pseudo_bulk3[["RNA"]])
colnames(pseudo_bulk3) <- unique(dataset3@meta.data$final_label)
# Compute pseudo bulk average expression on z-score scaled data
DefaultAssay(dataset4) <- "RNA"
Idents(dataset4) <- "cellType_L3"
dataset4 <- ScaleData(object = dataset4, features = unique_genes )
pseudo_bulk4 <- AverageExpression(object = dataset4,assays = "RNA",features = unique_genes,layer = "scale.data")
pseudo_bulk4 <- as.data.frame(pseudo_bulk4[["RNA"]])
colnames(pseudo_bulk4) <- unique(dataset4@meta.data$final_label)
# Compute pseudo bulk average expression on z-score scaled data
DefaultAssay(dataset5) <- "RNA"
Idents(dataset5) <- "cellType_L2"
dataset5 <- ScaleData(object = dataset5, features = unique_genes)
pseudo_bulk5 <- AverageExpression(object = dataset5,assays = "RNA",features = unique_genes,layer = "scale.data")
pseudo_bulk5 <- as.data.frame(pseudo_bulk5[["RNA"]])
colnames(pseudo_bulk5) <- unique(dataset5@meta.data$final_label)
pseudo_bulk1 <- pseudo_bulk1[unique_genes,]
pseudo_bulk2 <- pseudo_bulk2[unique_genes,]
pseudo_bulk3 <- pseudo_bulk3[unique_genes,]
pseudo_bulk4 <- pseudo_bulk4[unique_genes,]
pseudo_bulk5 <- pseudo_bulk5[unique_genes,]
# Combine all pseudo-bulk expression
mtx <- cbind(pseudo_bulk1,pseudo_bulk2,pseudo_bulk3,pseudo_bulk4,pseudo_bulk5)
# Calculate the correlation matrix
correlation_matrix <- cor(mtx, method = "pearson")
# Save correlation matrix
saveRDS(object = correlation_matrix,file.path(results_folder,"Heatmap_correlation.rds"))
fwrite(x = correlation_matrix,file.path(results_folder,"Heatmap_correlation.tsv"),row.names = T)
# Load plot data
correlation_matrix <- readRDS(file = file.path(results_folder,"Heatmap_correlation.rds"))
# Create the heatmap using pheatmap with viridis color palette, without numbers, and with dendrograms
pheatmap_result <- pheatmap(correlation_matrix,
color = viridis(50),
clustering_method = "complete",
display_numbers = FALSE,
fontsize = 6,
angle_col = 45,cellheight = unit(0.25,"cm"),cellwidth= unit(0.25,"cm"))
# # Extract the order of rows and columns from the pheatmap result
row_order <- pheatmap_result$tree_row$order
# Extract the names of rows and columns in the order they are displayed
clusterOrder <- rownames(correlation_matrix)[row_order]
# Save results
saveRDS(object = clusterOrder,file = file.path(results_folder,"clusterOrder.rds"))
# Save gene plot
ggsave(filename = file.path(results_folder,"/Heatmap_correlation.pdf"),plot = pheatmap_result,device = "pdf",height = 10,width = 12,units = "cm",limitsize = FALSE)
# Visualize clustering
DimPlot(integrated,label = T,label.size = 3,group.by = "seurat_clusters") + NoLegend()+ force_panelsizes(rows = unit(5,"cm"),cols = unit(5,"cm")) + theme_void() + NoLegend() + labs(title = "")
integrated <- FindClusters(integrated, resolution = 1)
# Visualize clustering
DimPlot(integrated,label = T,label.size = 3,group.by = "seurat_clusters") + NoLegend()+ force_panelsizes(rows = unit(5,"cm"),cols = unit(5,"cm")) + theme_void() + NoLegend() + labs(title = "")
table(integrated@meta.data$final_label,integrated@meta.data$seurat_clusters)
integrated <- FindClusters(integrated, resolution = 0.25)
table(integrated@meta.data$final_label,integrated@meta.data$seurat_clusters)
# Visualize clustering
DimPlot(integrated,label = T,label.size = 3,group.by = "seurat_clusters") + NoLegend()+ force_panelsizes(rows = unit(5,"cm"),cols = unit(5,"cm")) + theme_void() + NoLegend() + labs(title = "")
# Save umap plot data
integrated_metadata <- cbind(integrated@meta.data,integrated@reductions[["umap"]]@cell.embeddings)
# Check distribution of cells per final label and seurat clusters
table(integrated_metadata$final_label,integrated_metadata$seurat_clusters)
# Add new column with consensus_label
integrated_metadata$consensus_label <- integrated_metadata$seurat_clusters
integrated_metadata$consensus_label <- as.character(integrated_metadata$consensus_label)
# Add consensus labels
integrated_metadata$consensus_label[integrated_metadata$consensus_label %in% c("0","1","3","6")] <- "alpha"
integrated_metadata$consensus_label[integrated_metadata$consensus_label %in% c("2","7","10","8","9")] <- "beta"# Agt+
integrated_metadata$consensus_label[integrated_metadata$consensus_label %in% c("4")] <- "gamma"# Gfap+
integrated_metadata$consensus_label[integrated_metadata$consensus_label %in% c("5")] <- "delta"# AST4-like
integrated_metadata$consensus_label[integrated_metadata$consensus_label %in% c("10")] <- "epsilon"# ??+
table(integrated_metadata$consensus_label)
library(data.table)
library(dplyr)
library(Seurat)
library(ggplot2)
library(ggh4x)
library(matrixTests)
library(scico)
library(tidyr)
library(cowplot)
library(harmony)
library(magrittr)
# Load function files
source("../Scripts/Functions/20220708_generateWilcoxValues.R")
so <- readRDS("../04_Analysis/10_CB/Kozareva/so_astrocytes_basicQC.rds.download/")
so <- readRDS("../04_Analysis/10_CB/Kozareva/so_astrocytes_basicQC.rds")
options(future.globals.maxSize= 891289600)
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/03_HPF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/03_Data"
plot_functions_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0007_visualisR_package/visualisR/R"
dir.create(path = paste0(results_folder),showWarnings = F)
# Load plotting files
source(file.path(scripts_folder,"initialFiltering_one_step.R"))
source(file.path(scripts_folder,"standardClustering.R"))
source(file.path(scripts_folder,"percentageContribution.R"))
source(file.path(scripts_folder,"generateWilcoxValues_v2.R"))
source(file.path(scripts_folder,"addAvgExp_v2.R"))
source(file.path(scripts_folder,"softmax.R"))
source(file.path(scripts_folder,"harmonyIntegration.R"))
source(file.path(scripts_folder,"update_markers.R"))
source(file.path(scripts_folder,"order_genes.R"))
source(file.path(scripts_folder,"order_genes.R"))
source(file.path(scripts_folder,"createHeatmapData_v3.R"))
source(file.path(scripts_folder,"calculate_percentage_expressing.R"))
source(file.path(scripts_folder,"basic_qc_plots.R"))
source(file.path(scripts_folder,"sankey_qc_plot.R"))
source(file.path(scripts_folder,"make_umap_plot.R"))
source(file.path(scripts_folder,"drawBarPlot_v1.R"))
source(file.path(scripts_folder,"drawClusterHeatmap_v3.R"))
source(file.path(scripts_folder,"drawDimPlot.R"))
source(file.path(scripts_folder,"drawVisiumPlot.R"))
source(file.path(scripts_folder,"drawVlnPlot.R"))
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
set.seed(123)
so <- readRDS("../04_Analysis/10_CB/Kozareva/so_astrocytes_basicQC.rds")
so <- readRDS("../04_Analysis/10_CB/Kozareva/so_astrocytes_basicQC.rds")
so <- readRDS("../04_Analysis/10_CB/Kozareva/so_astrocytes_basicQC.rds")
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/10_CB"
so <- readRDS(file.path(results_folder,"/Kozareva/so_astrocytes_basicQC.rds"))
standardClustering_SCT <- function(dataset, pca = 15,resolution = 0.7, features = NULL,nfeatures = 6000,verbose = FALSE,vstflavor = "v2"){
# Cluster
dataset <- SCTransform(dataset,verbose = verbose,conserve.memory = FALSE,vst.flavor = vstflavor)
print("Running PCA.")
dataset <- RunPCA(dataset,verbose = F,features = features)
print("Finding neighbors.")
dataset <- FindNeighbors(object = dataset,dims = 1:pca,verbose = F)
print("Running UMAP")
dataset <- RunUMAP(object = dataset, dims = 1:pca,verbose = F,min.dist = 0.1)
print("Finding clusters")
dataset <- FindClusters(object = dataset, resolution = resolution, verbose = F)
dataset
}
so <- standardClustering_SCT(so)
options(future.globals.maxSize= 891289600)
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/10_CB"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/03_Data"
plot_functions_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0007_visualisR_package/visualisR/R"
dir.create(path = paste0(results_folder),showWarnings = F)
# Load plotting files
source(file.path(scripts_folder,"initialFiltering_one_step.R"))
source(file.path(scripts_folder,"standardClustering.R"))
source(file.path(scripts_folder,"percentageContribution.R"))
source(file.path(scripts_folder,"generateWilcoxValues_v2.R"))
source(file.path(scripts_folder,"addAvgExp_v2.R"))
source(file.path(scripts_folder,"softmax.R"))
source(file.path(scripts_folder,"harmonyIntegration.R"))
source(file.path(scripts_folder,"update_markers.R"))
source(file.path(scripts_folder,"order_genes.R"))
source(file.path(scripts_folder,"order_genes.R"))
source(file.path(scripts_folder,"createHeatmapData_v3.R"))
source(file.path(scripts_folder,"calculate_percentage_expressing.R"))
source(file.path(scripts_folder,"basic_qc_plots.R"))
source(file.path(scripts_folder,"sankey_qc_plot.R"))
source(file.path(scripts_folder,"make_umap_plot.R"))
source(file.path(scripts_folder,"drawBarPlot_v1.R"))
source(file.path(scripts_folder,"drawClusterHeatmap_v3.R"))
source(file.path(scripts_folder,"drawDimPlot.R"))
source(file.path(scripts_folder,"drawVisiumPlot.R"))
source(file.path(scripts_folder,"drawVlnPlot.R"))
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
set.seed(123)
so <- readRDS(file.path(results_folder,"/Kozareva/so_astrocytes_basicQC.rds"))
standardClustering_SCT <- function(dataset, pca = 15,resolution = 0.7, features = NULL,nfeatures = 6000,verbose = FALSE,vstflavor = "v2"){
# Cluster
dataset <- SCTransform(dataset,verbose = verbose,conserve.memory = FALSE,vst.flavor = vstflavor)
print("Running PCA.")
dataset <- RunPCA(dataset,verbose = F,features = features)
print("Finding neighbors.")
dataset <- FindNeighbors(object = dataset,dims = 1:pca,verbose = F)
print("Running UMAP")
dataset <- RunUMAP(object = dataset, dims = 1:pca,verbose = F,min.dist = 0.1)
print("Finding clusters")
dataset <- FindClusters(object = dataset, resolution = resolution, verbose = F)
dataset
}
so <- standardClustering_SCT(so)
options(future.globals.maxSize = 2 * 1024^3)
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/10_CB"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/03_Data"
plot_functions_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0007_visualisR_package/visualisR/R"
dir.create(path = paste0(results_folder),showWarnings = F)
# Load plotting files
source(file.path(scripts_folder,"initialFiltering_one_step.R"))
source(file.path(scripts_folder,"standardClustering.R"))
source(file.path(scripts_folder,"percentageContribution.R"))
source(file.path(scripts_folder,"generateWilcoxValues_v2.R"))
source(file.path(scripts_folder,"addAvgExp_v2.R"))
source(file.path(scripts_folder,"softmax.R"))
source(file.path(scripts_folder,"harmonyIntegration.R"))
source(file.path(scripts_folder,"update_markers.R"))
source(file.path(scripts_folder,"order_genes.R"))
source(file.path(scripts_folder,"order_genes.R"))
source(file.path(scripts_folder,"createHeatmapData_v3.R"))
source(file.path(scripts_folder,"calculate_percentage_expressing.R"))
source(file.path(scripts_folder,"basic_qc_plots.R"))
source(file.path(scripts_folder,"sankey_qc_plot.R"))
source(file.path(scripts_folder,"make_umap_plot.R"))
source(file.path(scripts_folder,"drawBarPlot_v1.R"))
source(file.path(scripts_folder,"drawClusterHeatmap_v3.R"))
source(file.path(scripts_folder,"drawDimPlot.R"))
source(file.path(scripts_folder,"drawVisiumPlot.R"))
source(file.path(scripts_folder,"drawVlnPlot.R"))
knitr::opts_chunk$set(echo = TRUE)
'%!in%' <- function(x,y)!('%in%'(x,y))
set.seed(123)
so <- standardClustering_SCT(so)
DimPlot(so)
DimPlot(so,group.by = "final_label")
install.packages("shinylive")
install.packages("httpuv")
library(shinylive)
library(httpuv)
# Load necessary libraries
library(data.table)
library(dplyr)
library(Seurat)
library(ggplot2)
library(ggh4x)
#library(matrixTests)
library(tidyr)
library(msigdbr)
# Load necessary libraries
library(data.table)
library(dplyr)
library(Seurat)
library(ggplot2)
library(ggh4x)
#library(matrixTests)
library(tidyr)
library(msigdbr)
library(data.table)
library(dplyr)
library(Seurat)
library(ggplot2)
library(ggh4x)
library(matrixTests)
# Copy "Hello World" from `{shiny}`
system.file("examples", "01_hello", package="shiny") |>
fs::dir_copy("OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/shinylive_test/myapp", overwrite = TRUE)
shinylive::export("myapp", "site")
ls
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/shinylive_test")
shinylive::export("myapp", "site")
httpuv::runStaticServer("site/")
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
shiny::runApp('myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "myapp", destdir = "docs")
install.packages("arrow")
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/04_OLF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-Personal/Projects/0002_AstroMAP/03_Data"
# Create results folder
dir.create(path = paste0(results_folder),showWarnings = F)
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Set util function
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set notebook options
options(future.globals.maxSize= 891289600)
# Set random seed
set.seed(123)
library(arrow)
ensembl98 <- fread(file.path(reference_folder,"ReferenceGenomes/ensembl_m98.tsv.gz"))
write_parquet(ensembl98,sink = "../04_Analysis/Webtool/ensembl98.parquet")
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
shinylive::export(appdir = "myapp", destdir = "docs")
install.packages("duckplyr")
runApp('myapp')
library(pillar)
runApp('myapp')
install.packages("duckplyr")
runApp('myapp')
saveRDS(object = ensembl98,file = "../04_Analysis/Webtool/ensembl98.rds")
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
library(arrow)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/04_OLF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-Personal/Projects/0002_AstroMAP/03_Data"
# Create results folder
dir.create(path = paste0(results_folder),showWarnings = F)
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Set util function
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set notebook options
options(future.globals.maxSize= 891289600)
# Set random seed
set.seed(123)
ensembl98 <- fread(file.path(reference_folder,"ReferenceGenomes/ensembl_m98.tsv.gz"))
write_parquet(ensembl98,sink = "../04_Analysis/Webtool/ensembl98.parquet")
saveRDS(object = ensembl98,file = "../04_Analysis/Webtool/ensembl98.rds")
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
runApp('myapp')
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
install.packages("nanoparquet")
runApp('myapp')
runApp('myapp')
runApp('myapp')
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
runApp('myapp')
file.exists("data/ensembl98.rds")
file.exists("docs/ensembl98.rds")
runApp('myapp')
runApp('myapp')
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
library(arrow)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/04_OLF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-Personal/Projects/0002_AstroMAP/03_Data"
# Create results folder
dir.create(path = paste0(results_folder),showWarnings = F)
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Set util function
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set notebook options
options(future.globals.maxSize= 891289600)
# Set random seed
set.seed(123)
ensembl98 <- fread(file.path(reference_folder,"ReferenceGenomes/ensembl_m98.tsv.gz"))
#write_parquet(ensembl98,sink = "../04_Analysis/Webtool/ensembl98.parquet")
nanoparquet::write_parquet(ensembl98, "../04_Analysis/Webtool/ensembl98.parquet")
#saveRDS(object = ensembl98,file = "../04_Analysis/Webtool/ensembl98.rds")
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
runApp('myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
library(arrow)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/04_OLF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-Personal/Projects/0002_AstroMAP/03_Data"
# Create results folder
dir.create(path = paste0(results_folder),showWarnings = F)
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Set util function
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set notebook options
options(future.globals.maxSize= 891289600)
# Set random seed
set.seed(123)
fwrite(ensembl98,file = "../04_Analysis/Webtool/ensembl98.tsv")
fwrite(ensembl98,file = "../04_Analysis/Webtool/ensembl98.tsv",compress = T)
fwrite(ensembl98,file = "../04_Analysis/Webtool/ensembl98.tsv",compress = "auto")
fwrite(ensembl98,file = "../04_Analysis/Webtool/ensembl98.tsv.gz",compress = "gzip")
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
library(arrow)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/04_OLF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-Personal/Projects/0002_AstroMAP/03_Data"
# Create results folder
dir.create(path = paste0(results_folder),showWarnings = F)
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Set util function
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set notebook options
options(future.globals.maxSize= 891289600)
# Set random seed
set.seed(123)
tmp <- fread("../04_Analysis/Webtool/ensembl98.tsv.gz")
runApp('~/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2/myapp')
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
runApp('myapp')
ensembl98 <- fread(file.path(reference_folder,"ReferenceGenomes/ensembl_m98.tsv.gz"))
ensembl98 <- ensembl98[1:100000,]
fwrite(ensembl98,file = "../04_Analysis/Webtool/ensembl98.csv")
# Load necessary libraries
library(data.table)
library(dplyr)
library(ggplot2)
library(ggh4x)
library(arrow)
# Define working directory
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts")
# Define folder paths
scripts_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/02_Scripts/Functions"
spatial_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/01_Spatial"
results_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-KULeuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/04_Analysis/04_OLF"
reference_folder <- "/Users/u0117021/Library/CloudStorage/OneDrive-Personal/Projects/0002_AstroMAP/03_Data"
# Create results folder
dir.create(path = paste0(results_folder),showWarnings = F)
# Load functions
function_files <- list.files(scripts_folder, pattern = "\\.R$", full.names = TRUE)
lapply(function_files, source)
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Set util function
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set notebook options
options(future.globals.maxSize= 891289600)
# Set random seed
set.seed(123)
ensembl98 <- fread(file.path(reference_folder,"ReferenceGenomes/ensembl_m98.tsv.gz"))
ensembl98 <- ensembl98[1:100000,]
fwrite(ensembl98,file = "../04_Analysis/Webtool/ensembl98.csv")
setwd("~/OneDrive - KU Leuven/LabFiles/Projects/0002_AstroMAP/AstroMAP/08_Webtool/test2")
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
runApp('myapp')
shinylive::export(appdir = "myapp", destdir = "docs")
runApp('myapp')
runApp('myapp')
runApp('myapp')
